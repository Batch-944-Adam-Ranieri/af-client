{"version":3,"sources":["./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/landing-page/google-map-rev.module.ts","./src/app/components/landing-page/google-map-rev.component.ts","./src/app/components/landing-page/google-map-rev.component.html","./src/app/components/add-building/add-building.component.ts","./src/app/components/add-building/add-building.component.html","./src/environments/environment.ts","./src/app/services/building/building.service.ts","./src/app/components/create-location/create-location.component.ts","./src/app/components/create-location/create-location.component.html","./src/app/components/inspect-room/inspect-room.component.ts","./src/app/components/inspect-room/inspect-room.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/inspect-building/inspect-building.component.ts","./src/app/components/inspect-building/inspect-building.component.html","./src/app/services/location/location.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/signin-page/signin-page.component.ts","./src/app/components/signin-page/signin-page.component.html","./src/app/components/signup-page/signup-page.component.ts","./src/app/components/signup-page/signup-page.component.html","./src/app/components/inspect-location/inspect-location.component.ts","./src/app/components/inspect-location/inspect-location.component.html","./src/app/app.module.ts","./src/app/components/add-location/add-location.component.ts","./src/app/components/add-location/add-location.component.html","./src/app/services/room/room.service.ts","./src/app/components/components.module.ts","./src/app/shared/material/material.module.ts","./src/app/components/location-page/location-page.component.ts","./src/app/components/location-page/location-page.component.html","./src/app/components/add-room/add-room.component.ts","./src/app/components/add-room/add-room.component.html","./src/app/services/app-confirm/app-confirm.service.ts","./src/app/services/app-confirm/app-confirm.component.ts","./src/app/services/app-confirm/app-confirm.component.html","./src/app/app-routing.module.ts","./src/app/components/landing-page/landing-page.component.ts","./src/app/components/landing-page/landing-page.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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AAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE;YACtD,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE;YACtD,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE;YACtD,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE;YACtD,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE;YACtD,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE;YACtD,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE;YACtD,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE;YACtD,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE;YACtD,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE;YACtD,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE;YACtD,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE;YACtD,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE;YACtD,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE;YACtD,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE;YACtD,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE;YACtD,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE;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","file":"main.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.sass']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  @ViewChild(MatMenuTrigger) trigger!: MatMenuTrigger;\n  \n  //Need service method to check if User is Logged in\n\n  loggedIn:boolean = false;\n\n  logout(){\n    this.loggedIn = false;\n  }\n  \n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar>\n    <button mat-icon-button aria-label=\"menu\" [matMenuTriggerFor]=\"menu\">\n        <mat-icon>menu</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item>\n          <mat-icon>location_city</mat-icon>\n          <a [routerLink]=\"['/location']\" routerLinkActive=\"router-link-active\" >\n            <span>Create New Location</span>\n          </a>\n        </button>\n        <button mat-menu-item>\n          <mat-icon>calendar_today</mat-icon>\n          <span>Reserve a Room</span>\n        </button>\n        <button mat-menu-item>\n          <mat-icon>date_range</mat-icon>\n          <span>View My Reservations</span>\n        </button>\n      </mat-menu>\n    <span><a [routerLink]=\"['']\" routerLinkActive=\"router-link-active\" >AssignForce</a></span>\n    <span class=\"spacer\"></span>\n    <button mat-raised-button color=\"primary\" *ngIf=\"loggedIn\" (click)=\"logout()\">Logout</button>\n    <button mat-raised-button color=\"primary\" *ngIf=\"!loggedIn\" [routerLink]=\"['/signin']\" routerLinkActive=\"router-link-active\">Sign In</button>\n</mat-toolbar>\n","import { NgModule } from '@angular/core';\nimport { GoogleMapsModule } from '@angular/google-maps';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HttpClientJsonpModule } from '@angular/common/http';\n\nimport { GoogleMapRevComponent } from './google-map-rev.component';\n\n\n@NgModule({\n  declarations: [\n    GoogleMapRevComponent,\n  ],\n  imports: [\n    CommonModule,\n    GoogleMapsModule,\n    HttpClientModule,\n    HttpClientJsonpModule,\n  ],\n  exports: [\n    GoogleMapRevComponent,\n  ],\n})\nexport class GoogleMapRevModule {}","import { Component} from '@angular/core';\nimport {environment} from '../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Component({\n    selector: 'google-map-rev',\n    templateUrl: './google-map-rev.component.html',\n})\nexport class GoogleMapRevComponent {\n  private API_KEY = environment.API_KEY;\n\n  apiLoaded: Observable<boolean>;\n\n  constructor(httpClient: HttpClient) {\n    this.apiLoaded = httpClient.jsonp(`https://maps.googleapis.com/maps/api/js?key=${this.API_KEY}`, 'callback')\n        .pipe(\n          map(() => true),\n          catchError(() => of(false)),\n        );\n  }\n\n  center: google.maps.LatLngLiteral = {lat: 24, lng: 12};\n  zoom = 4;\n\n  moveMap(event: google.maps.MapMouseEvent) {\n    this.center = (event.latLng.toJSON());\n  }\n}\n\n","\n<google-map *ngIf=\"apiLoaded |async\"\n    height=\"400px\"\n    width=\"750px\"\n    [center]=\"center\"\n    [zoom]=\"zoom\"\n    (mapClick)=\"moveMap($event)\"\n>\n</google-map>\n\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface BuildingDialogData {\n  locationId?: number;\n  address?: string;\n  buildingId?: number;\n  title?: String;\n}\n\n@Component({\n  selector: 'app-add-building',\n  templateUrl: './add-building.component.html',\n  styleUrls: ['./add-building.component.sass']\n})\n\nexport class AddBuildingComponent implements OnInit {\n\n  addBuildingForm!: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddBuildingComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: BuildingDialogData,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    // const buildingId = new FormControl(this.data.buildingId, Validators.required);\n    const address = new FormControl(this.data.address, Validators.required);\n    // const locationId = new FormControl(this.data.locationId, Validators.required);\n\n    this.addBuildingForm = this.fb.group({\n      address\n    });\n  }\n\n  closeDialog(): void {\n    this.dialogRef.close();\n  }\n\n  submitForm() {\n    if (this.readFormData()) {\n      delete this.data.title;\n      this.dialogRef.close(this.data);\n    } else {\n      console.log('Invalid form data');\n    }\n  }\n\n  readFormData(): boolean {\n    const valid = this.addBuildingForm.valid;\n    const address = this.addBuildingForm.value.address;\n    this.data = { ...this.data, buildingId: 0, address };\n    console.log(\"data\", this.data);\n    \n    return valid;\n  }\n\n}\n","<h2>{{ data.title }}</h2>\n<form [formGroup]=\"addBuildingForm\" (ngSubmit)=\"submitForm()\" class=\"d-flex flex-column gap-2\">\n    \n\n    <mat-form-field>\n        <mat-label>address</mat-label>\n        <input matInput type=\"text\" name=\"address\" formControlName=\"address\"/>\n    </mat-form-field>\n    \n\n    <div class=\"d-flex gap-2 align-items-center\">\n        <button mat-raised-button color=\"primary\" cdkFocusInitial type=\"submit\">Ok</button>\n        <button mat-flat-button color=\"accent\" class=\"mx-3\" (click)=\"closeDialog()\" type=\"button\">Cancel</button>\n    </div>\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_KEY: \"AIzaSyDs47rjEmxP2a7lM4TKvSLtbJ1h5oe8wUQ\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Building } from 'src/app/models/building';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BuildingService {\n\n  currentBuilding?: Building = {};\n\n  buildings = [\n    { buildingId: 0, address: 'address 0', locationId: 1 },\n    { buildingId: 1, address: 'address 1', locationId: 1 },\n    { buildingId: 2, address: 'address 2', locationId: 2 },\n    { buildingId: 3, address: 'address 3', locationId: 1 },\n    { buildingId: 4, address: 'address 4', locationId: 1 },\n    { buildingId: 5, address: 'address 5', locationId: 2 },\n    { buildingId: 6, address: 'address 6', locationId: 3 },\n    { buildingId: 0, address: 'address 0', locationId: 1 },\n    { buildingId: 1, address: 'address 1', locationId: 1 },\n    { buildingId: 2, address: 'address 2', locationId: 2 },\n    { buildingId: 3, address: 'address 3', locationId: 1 },\n    { buildingId: 4, address: 'address 4', locationId: 1 },\n    { buildingId: 5, address: 'address 5', locationId: 2 },\n    { buildingId: 6, address: 'address 6', locationId: 3 },\n    { buildingId: 0, address: 'address 0', locationId: 1 },\n    { buildingId: 1, address: 'address 1', locationId: 1 },\n    { buildingId: 2, address: 'address 2', locationId: 2 },\n    { buildingId: 3, address: 'address 3', locationId: 1 },\n    { buildingId: 4, address: 'address 4', locationId: 1 },\n    { buildingId: 5, address: 'address 5', locationId: 2 },\n    { buildingId: 6, address: 'address 6', locationId: 3 },\n    { buildingId: 0, address: 'address 0', locationId: 1 },\n    { buildingId: 1, address: 'address 1', locationId: 1 },\n    { buildingId: 2, address: 'address 2', locationId: 2 },\n    { buildingId: 3, address: 'address 3', locationId: 1 },\n    { buildingId: 4, address: 'address 4', locationId: 1 },\n    { buildingId: 5, address: 'address 5', locationId: 2 },\n    { buildingId: 6, address: 'address 6', locationId: 3 },\n  ];\n\n  constructor() {}\n\n  getBuildingsByLocationId(locationId: number): Observable<Building[]> {\n    return of(this.buildings.filter((e) => e.locationId == locationId));\n  }\n\n  deleteBuildingById(buildingId: number): Observable<boolean> {\n    return of(false);\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Building } from 'src/app/models/building';\nimport { Location } from 'src/app/models/location';\nimport { BuildingService } from 'src/app/services/building/building.service';\nimport { LocationService } from 'src/app/services/location/location.service';\nimport { InspectBuildingComponent } from '../inspect-building/inspect-building.component';\nimport { InspectRoomComponent } from '../inspect-room/inspect-room.component';\n\n@Component({\n  selector: 'app-create-location',\n  templateUrl: './create-location.component.html',\n  styleUrls: ['./create-location.component.sass']\n})\nexport class CreateLocationComponent implements OnInit {\n\n  @ViewChild(InspectBuildingComponent) buildingChild!:InspectBuildingComponent;\n  @ViewChild(InspectRoomComponent) roomChild!:InspectRoomComponent;\n\n  firstFormGroup!: FormGroup;\n  currentLocation?: Location;\n  currentBuilding?: Building;\n\n  constructor(private locationService: LocationService,\n    private _formBuilder: FormBuilder, \n    private buildingService: BuildingService) { }\n\n  ngOnInit(): void {\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.getCurrentLocation();\n  }\n\n  test() {\n    console.log(this.locationService.currentLocation);\n    \n  }\n\n  getCurrentLocation() {\n    this.currentLocation = this.locationService.currentLocation;\n  }\n  \n  getCurrentBuilding() {\n    this.currentBuilding = this.buildingService.currentBuilding;\n  }\n\n  reInitBuildingPage() {\n    this.buildingChild.ngOnInit();\n  }\n\n  reInitRoomPage() {\n    this.roomChild.ngOnInit();\n  }\n\n}\n","<mat-horizontal-stepper linear #stepper>\n    <mat-step>\n        <app-inspect-location (click)=\"getCurrentLocation()\"></app-inspect-location>\n        <div class=\"d-flex\">\n            <button class=\"w-100\" color=\"primary\" mat-raised-button matStepperNext *ngIf=\"currentLocation\" (click)=\"reInitBuildingPage()\">Next</button>\n        </div>\n    </mat-step>\n    <mat-step>\n        <app-inspect-building [locationData]=\"currentLocation?.name\" (click)=\"getCurrentBuilding()\"></app-inspect-building>\n        <div class=\"d-flex mt-3\">\n            <button mat-raised-button color='primary' matStepperPrevious class=\"w-100 mr-2\">Back</button>\n            <button mat-raised-button color='primary' matStepperNext *ngIf=\"currentBuilding\" class=\"w-100\" (click)=\"reInitRoomPage()\">Next</button>\n        </div>\n    </mat-step>\n    <mat-step>\n        <app-inspect-room [buildingDataInput]=\"currentBuilding?.buildingId + ''\"></app-inspect-room>\n        <div>\n            <button mat-raised-button color=\"primary\" class=\"w-100 mt-3\" matStepperPrevious>Back</button>\n        </div>\n    </mat-step>\n\n</mat-horizontal-stepper>","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Room } from 'src/app/models/room';\nimport { AppConfirmService } from 'src/app/services/app-confirm/app-confirm.service';\nimport { BuildingService } from 'src/app/services/building/building.service';\nimport { LocationService } from 'src/app/services/location/location.service';\nimport { RoomService } from 'src/app/services/room/room.service';\nimport { AddRoomComponent } from '../add-room/add-room.component';\n\n@Component({\n  selector: 'app-inspect-room',\n  templateUrl: './inspect-room.component.html',\n  styleUrls: ['./inspect-room.component.sass']\n})\nexport class InspectRoomComponent implements OnInit, AfterViewInit {\n\n  roomData?: Room;\n  \n  displayedColumns: string[] = [\n    'roomId',\n    'name',\n    'type',\n    'capacity',\n    'actions'\n  ];\n  dataSource!: MatTableDataSource<Room>;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  @Input() buildingDataInput?: string;\n\n  constructor(\n    private locationService: LocationService,\n    public dialog: MatDialog,\n    private confirmService: AppConfirmService,\n    private roomService: RoomService,\n    private buildingService: BuildingService\n  ) {}\n\n  ngOnInit(): void {\n    this.createTable();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  createTable(): void {\n    this.roomService.getRoomByBuilding(this.buildingService.currentBuilding!).subscribe((res) => {\n      this.dataSource = new MatTableDataSource(res);\n    });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  editRoom(room: Room) {\n    this.roomData = room;\n    console.log(room);\n    \n    this.openDialog(\"Edit room\");\n  }\n\n  deleteRoom(room: Room) {\n    this.confirmService\n      .confirm({ message: `Delete room id: ${room.roomId}`, title: 'Delete room' })\n      .subscribe((confirm) => {\n        if (confirm) {\n          console.log('Delete ', room);\n        }\n      });\n  }\n\n\n  addRoom() {\n    this.roomData = { buildingId: this.buildingService.currentBuilding?.buildingId };\n    this.openDialog(\"Add room\");\n  }\n\n  openDialog(title: string) {\n    const dialogRef = this.dialog.open(AddRoomComponent, {\n      data: { ...this.roomData, title },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"dialog return\", result);\n    });\n  }\n\n\n}\n","<h1>Inspect Room Page</h1>\n<h3 *ngIf=\"buildingDataInput\" class=\"text-muted\">Current building ID: {{ buildingDataInput }}</h3>\n<div class=\"d-flex align-items-center mt-4\">\n    <mat-form-field class=\"w-100 mr-3\">\n        <mat-label>Search</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"room\" #input>\n    </mat-form-field>\n    <button class=\"w-100\" mat-raised-button (click)=\"addRoom()\" color=\"primary\">Add new room</button>\n</div>\n\n<div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"table-hover\"  matSortActive=\"name\" matSortDirection=\"asc\">\n\n        <!-- ID Column -->\n        <ng-container matColumnDef=\"roomId\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Room ID </th>\n            <td mat-cell *matCellDef=\"let row\"  > {{row.roomId}} </td>\n        </ng-container>\n\n        <!-- Progress Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"type\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.type}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"capacity\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Capacity </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.capacity}} </td>\n        </ng-container>\n\n        <!-- Color Column -->\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Actions </th>\n            <td mat-cell *matCellDef=\"let row\"> \n                <button mat-button (click)=\"editRoom(row)\" color=\"primary\">edit</button> \n                <button mat-button color='accent' (click)=\"deleteRoom(row)\">delete</button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" ></tr>\n\n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n        </tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.sass']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar>\n    <p>Revature</p>\n</mat-toolbar>\n","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Building } from 'src/app/models/building';\nimport { AppConfirmService } from 'src/app/services/app-confirm/app-confirm.service';\nimport { BuildingService } from 'src/app/services/building/building.service';\nimport { LocationService } from 'src/app/services/location/location.service';\nimport { RoomService } from 'src/app/services/room/room.service';\nimport { AddBuildingComponent } from '../add-building/add-building.component';\n\n\ninterface BuildingWithRoomCount {\n  buildingId?: number;\n  address?: string;\n  roomCount?: number;\n}\n\n@Component({\n  selector: 'app-inspect-building',\n  templateUrl: './inspect-building.component.html',\n  styleUrls: ['./inspect-building.component.sass'],\n})\nexport class InspectBuildingComponent implements OnInit, AfterViewInit {\n\n  @Input() locationData?: string;\n  selectedBuilding?: Building;\n  buildingData?: Building;\n\n  displayedColumns: string[] = [\n    'buildingId',\n    'address',\n    'roomCount',\n    'actions',\n  ];\n  dataSource!: MatTableDataSource<Building>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private locationService: LocationService,\n    private buildingService: BuildingService,\n    private confirmService: AppConfirmService,\n    public dialog: MatDialog,\n    private roomService: RoomService\n  ) {}\n\n  ngOnInit(): void {\n    this.createTable();\n  }\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  createTable(): void {\n    this.buildingService\n      .getBuildingsByLocationId(\n        this.locationService.currentLocation?.locationId!\n      )\n      .subscribe((res) => {\n        let arr: BuildingWithRoomCount[] = res;\n        \n        arr.forEach( building => {\n          this.roomService.getRoomByBuilding(building).subscribe( res => \n            building.roomCount =  res.length )\n          })\n        this.dataSource = new MatTableDataSource(arr);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  editBuilding(building: Building) {\n    this.buildingData = building;\n    this.openDialog(\"Edit location\");\n  }\n\n  deleteBuilding(building: Building) {\n    this.confirmService\n      .confirm({\n        message: `Delete ${building.buildingId}`,\n        title: 'Delete building',\n      })\n      .subscribe((confirm) => {\n        if (confirm) {\n          console.log('Delete ', location);\n          this.buildingService\n            .deleteBuildingById(building.buildingId!)\n            .subscribe((res) => {\n              console.log('res from delete building', res);\n            });\n        }\n      });\n  }\n\n  chooseBuilding(building: Building) {\n    this.selectedBuilding = building;\n    this.buildingService.currentBuilding = building;\n  }\n\n  addBuilding() {\n    this.buildingData = { locationId: this.locationService.currentLocation?.locationId };\n    this.openDialog(\"Add location\");\n  }\n\n  openDialog(title: string) {\n    const dialogRef = this.dialog.open(AddBuildingComponent, {\n      data: { ...this.buildingData, title },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"dialog return\", result);\n    });\n  }\n}\n","<h1>Inspect Building Page</h1>\n<h3 *ngIf=\"locationData\" class=\"text-muted\">Current location: {{ locationData }}</h3>\n<div class=\"d-flex align-items-center mt-4\">\n    <mat-form-field class=\"w-100 mr-3\">\n        <mat-label>Search</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"building\" #input>\n    </mat-form-field>\n    <button class=\"w-100\" color=\"primary\" mat-raised-button (click)=\"addBuilding()\">Add building</button>\n</div>\n<div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"table-hover\"  matSortActive=\"name\" matSortDirection=\"asc\">\n\n        <!-- ID Column -->\n        <ng-container matColumnDef=\"buildingId\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Building ID </th>\n            <td mat-cell *matCellDef=\"let row\"  > {{row.buildingId}} </td>\n        </ng-container>\n\n        <!-- Progress Column -->\n        <ng-container matColumnDef=\"address\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Address </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.address}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"roomCount\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Room count </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.roomCount}} </td>\n        </ng-container>\n\n\n        <!-- Color Column -->\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Actions </th>\n            <td mat-cell *matCellDef=\"let row\"> \n                <button mat-button (click)=\"editBuilding(row)\" color=\"primary\">edit</button> \n                <button mat-button color='accent' (click)=\"deleteBuilding(row)\">delete</button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"chooseBuilding(row)\"></tr>\n\n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n        </tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n</div>\n<button mat-button color='accent' *ngIf=\"selectedBuilding\" class=\"w-100 mt-3\">\n    <h2><b>Current selected Building: {{selectedBuilding?.buildingId}}</b> </h2>\n</button>","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Location } from 'src/app/models/location';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocationService {\n\n  locations: Location[] = [\n    {\n      locationId: 1,\n      name: 'location 1',\n      state: 'MA',\n      city: 'Boston',\n      zipCode: '02116',\n    },\n    {\n      locationId: 2,\n      name: 'location 2',\n      state: 'NY',\n      city: 'New York City',\n      zipCode: '10001',\n    },\n    {\n      locationId: 3,\n      name: 'location 3',\n      state: 'AL',\n      city: 'Montgomery',\n      zipCode: '12112',\n    },\n    {\n      locationId: 4,\n      name: 'location 4',\n      state: 'NJ',\n      city: 'Newark',\n      zipCode: '22116',\n    },\n    {\n      locationId: 5,\n      name: 'location 5',\n      state: 'WA',\n      city: 'Seattle',\n      zipCode: '52116',\n    },\n    {\n      locationId: 6,\n      name: 'location 6',\n      state: 'SD',\n      city: 'Pierre',\n      zipCode: '32116',\n    },\n  ];\n\n\n  currentLocation?: Location = {};\n\n  constructor() {}\n\n\n  getAllLocation():Observable<Location[]> {\n    return of(this.locations);\n  }\n\n  deleteLocation():Observable<boolean> {\n    return of(false);\n  }\n\n  createLocation(location: Location): Observable<Location> {\n    this.locations.push(location);\n    return of(location);\n  }\n\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'project3frontend';\n}\n","<!-- targeting with grid template rows -->\n<header>\n  <app-header></app-header>\n</header>\n\n<div class=\"main-container\">\n  <main class=\"grid-container\">\n    <div class=\"ro-container\">\n      <router-outlet></router-outlet>\n    </div>\n    <footer>\n      <app-footer></app-footer>\n    </footer>\n  </main>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signin-page',\n  templateUrl: './signin-page.component.html',\n  styleUrls: ['./signin-page.component.sass'],\n})\nexport class SigninPageComponent implements OnInit {\n  email: string = '';\n  hide: boolean = true;\n  pw: string = '';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  signin() {}\n\n  signup() {}\n}\n","<div class=\"container d-flex flex-column justify-content-center align-items-center\">\n\n  <mat-card>\n\n    <mat-tab-group>\n      <mat-tab label=\"Sign In\">\n\n        <mat-card class=\"signin-card\">\n          <mat-card-content class=\"d-flex flex-column\">\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Email</mat-label>\n              <input matInput type=\"email\" [(ngModel)]=\"email\">\n              <mat-icon matSuffix>person</mat-icon>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Password</mat-label>\n              <input matInput [type]=\"hide ? 'password' : 'text'\" [(ngModel)]=\"pw\">\n              <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                [attr.aria-pressed]=\"hide\">\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n              </button>\n            </mat-form-field>\n\n            <button mat-flat-button color=\"primary\" (click)=\"signin()\">Sign In</button>\n          </mat-card-content>\n        </mat-card>\n\n      </mat-tab>\n\n      <mat-tab label=\"Sign Up\">\n        <mat-card class=\"signin-card\">\n\n          <mat-card-content class=\"d-flex flex-column\">\n            <mat-form-field appearance=\"fill\">\n              <mat-label>First Name</mat-label>\n              <input matInput type=\"text\" required>\n              <mat-icon matSuffix>person_add</mat-icon>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Last Name</mat-label>\n              <input matInput type=\"text\" required>\n              <mat-icon matSuffix>person_add</mat-icon>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Email</mat-label>\n              <input matInput type=\"email\" required>\n              <mat-icon matSuffix>alternate_email</mat-icon>\n            </mat-form-field>\n\n            <button mat-flat-button color=\"primary\" class=\"signup-btn\" (click)=\"signup()\">\n              + Register\n            </button>\n\n          </mat-card-content>\n\n        </mat-card>\n      </mat-tab>\n\n    </mat-tab-group>\n\n  </mat-card>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup-page',\n  templateUrl: './signup-page.component.html',\n  styleUrls: ['./signup-page.component.sass']\n})\nexport class SignupPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>signup-page works!</p>\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Location } from 'src/app/models/location';\nimport { AppConfirmService } from 'src/app/services/app-confirm/app-confirm.service';\nimport { LocationService } from 'src/app/services/location/location.service';\nimport { AddLocationComponent } from '../add-location/add-location.component';\n\n@Component({\n  selector: 'app-inspect-location',\n  templateUrl: './inspect-location.component.html',\n  styleUrls: ['./inspect-location.component.sass'],\n})\nexport class InspectLocationComponent implements OnInit, AfterViewInit {\n  locationId?: number;\n  name?: string;\n  state?: string;\n  city?: string;\n  zipCode?: string;\n  locationData?: Location;\n  selectedLocation?: Location;\n\n  displayedColumns: string[] = [\n    'locationId',\n    'name',\n    'state',\n    'city',\n    'zipCode',\n    'actions',\n  ];\n  dataSource!: MatTableDataSource<Location>;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private locationService: LocationService,\n    public dialog: MatDialog,\n    private confirmService: AppConfirmService\n  ) {}\n\n  ngOnInit(): void {\n    this.createTable();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  createTable(): void {\n    this.locationService.getAllLocation().subscribe((res) => {\n      this.dataSource = new MatTableDataSource(res);\n    });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  editLocation(loc: Location) {\n    this.locationData = loc;\n    this.openDialog(\"Edit location\");\n  }\n\n  deleteLocation(location: Location) {\n    this.confirmService\n      .confirm({ message: `Delete ${location.name}`, title: 'Delete location' })\n      .subscribe((confirm) => {\n        if (confirm) {\n          console.log('Delete ', location);\n        }\n      });\n  }\n\n  chooseLocation(loc: Location) {\n    console.log('Select location: ', loc);\n    this.selectedLocation = loc;\n    this.locationService.currentLocation = loc;\n  }\n\n  addLocation() {\n    this.locationData = {};\n    this.openDialog(\"Add location\");\n  }\n\n  openDialog(title: string) {\n    const dialogRef = this.dialog.open(AddLocationComponent, {\n      data: { ...this.locationData, title },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"dialog return\", result);\n    });\n  }\n}\n","<h1>Inspect Location Page</h1>\n<div class=\"d-flex align-items-center mt-4\">\n    <mat-form-field class=\"w-100 mr-3\">\n        <mat-label>Search</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"location name\" #input>\n    </mat-form-field>\n    <button class=\"w-100\" mat-raised-button (click)=\"addLocation()\" color=\"primary\">Add new location</button>\n</div>\n<div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"table-hover\" matSortActive=\"name\" matSortDirection=\"asc\">\n\n        <!-- ID Column -->\n        <ng-container matColumnDef=\"locationId\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Location ID </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.locationId}} </td>\n        </ng-container>\n\n        <!-- Progress Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"state\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> State </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.state}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"city\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> City </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.city}} </td>\n        </ng-container>\n\n        <!-- Color Column -->\n        <ng-container matColumnDef=\"zipCode\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> zipCode </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.zipCode}} </td>\n        </ng-container>\n\n        <!-- Color Column -->\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Actions </th>\n            <td mat-cell *matCellDef=\"let row\">\n                <button mat-button (click)=\"editLocation(row)\" color=\"primary\">edit</button>\n                <button mat-button color='accent' (click)=\"deleteLocation(row)\">delete</button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"chooseLocation(row)\"></tr>\n\n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n        </tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n</div>\n<button mat-button color='accent' *ngIf=\"selectedLocation\" class=\"w-100 mt-3\">\n    <h2><b>Current selected location: {{selectedLocation?.name}}</b> </h2>\n</button>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ComponentsModule } from './components/components.module';\nimport { MaterialModule } from './shared/material/material.module';\nimport { AppConfirmService } from './services/app-confirm/app-confirm.service';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ToastrModule } from 'ngx-toastr';\nimport { GoogleMapRevModule } from './components/landing-page/google-map-rev.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ComponentsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    GoogleMapRevModule,\n    ToastrModule.forRoot({\n      timeOut: 5000,\n      positionClass: 'toast-top-right',\n      progressBar: true,\n      newestOnTop: false,\n      maxOpened: 4,\n    })\n  ],\n  providers: [AppConfirmService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Location } from 'src/app/models/location';\n\nexport interface LocationDialogData {\n  locationId?: number;\n  name?: string;\n  state?: string;\n  city?: string;\n  zipCode?: string;\n  title?: String;\n}\n@Component({\n  selector: 'app-add-location',\n  templateUrl: './add-location.component.html',\n  styleUrls: ['./add-location.component.sass'],\n})\nexport class AddLocationComponent implements OnInit {\n  addLocationForm!: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddLocationComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: LocationDialogData,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    const name = new FormControl(this.data.name, Validators.required);\n    const state = new FormControl(this.data.state, Validators.required);\n    const city = new FormControl(this.data.city, Validators.required);\n    const zipCode = new FormControl(this.data.zipCode, Validators.required);\n\n    this.addLocationForm = this.fb.group({\n      name,\n      state,\n      city,\n      zipCode,\n    });\n  }\n\n  closeDialog(): void {\n    this.dialogRef.close();\n  }\n\n  submitForm() {\n    if (this.readFormData()) {\n      delete this.data.title;\n      this.dialogRef.close(this.data);\n    } else {\n      console.log('Invalid form data');\n    }\n  }\n\n  readFormData(): boolean {\n    const valid = this.addLocationForm.valid;\n    const name = this.addLocationForm.value.name;\n    const state = this.addLocationForm.value.state;\n    const city = this.addLocationForm.value.city;\n    const zipCode = this.addLocationForm.value.zipCode;\n    this.data = { ...this.data, locationId: 0, name, state, city, zipCode };\n    return valid;\n  }\n}\n","<h2>{{ data.title }}</h2>\n<form [formGroup]=\"addLocationForm\" (ngSubmit)=\"submitForm()\" class=\"d-flex flex-column gap-2\">\n    <mat-form-field>\n        <mat-label>Location name</mat-label>\n        <input matInput type=\"text\" name=\"name\" formControlName=\"name\"/>\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>State</mat-label>\n        <input matInput type=\"text\" name=\"state\" formControlName=\"state\"/>\n    </mat-form-field>\n    \n    <mat-form-field>\n        <mat-label>City</mat-label>\n        <input matInput type=\"text\" name=\"city\" formControlName=\"city\"/>\n    </mat-form-field>\n    \n    <mat-form-field>\n        <mat-label>Zip code</mat-label>\n        <input matInput  type=\"text\" name=\"zipCode\" formControlName=\"zipCode\"/>\n    </mat-form-field>\n\n    <div class=\"d-flex gap-2 align-items-center\">\n        <button mat-raised-button color=\"primary\" cdkFocusInitial type=\"submit\">Ok</button>\n        <button mat-flat-button color=\"accent\" class=\"mx-3\" (click)=\"closeDialog()\" type=\"button\">Cancel</button>\n    </div>\n</form>\n\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Building } from 'src/app/models/building';\nimport { Room } from 'src/app/models/room';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoomService {\n\n  rooms: Room[] = [\n    { roomId: 0, name: \"room 0\", capacity: 200, buildingId: 1, type: 0 },\n    { roomId: 1, name: \"room 1\", capacity: 150, buildingId: 1, type: 2 },\n    { roomId: 2, name: \"room 2\", capacity: 800, buildingId: 2, type: 1 },\n    { roomId: 3, name: \"room 3\", capacity: 100, buildingId: 3, type: 2 },\n    { roomId: 4, name: \"room 4\", capacity: 100, buildingId: 4, type: 1 },\n    { roomId: 5, name: \"room 5\", capacity: 100, buildingId: 5, type: 1 },\n    { roomId: 6, name: \"room 6\", capacity: 1100, buildingId: 1, type: 0 },\n    { roomId: 7, name: \"room 7\", capacity: 1020, buildingId: 2, type: 0 },\n    { roomId: 8, name: \"room 8\", capacity: 1010, buildingId: 4, type: 1 },\n    { roomId: 9, name: \"room 9\", capacity: 1100, buildingId: 5, type: 2 },\n    { roomId: 10, name: \"room 10\", capacity: 200, buildingId: 1, type: 0 },\n\n\n  ]\n\n  constructor() { }\n\n  getRoomByBuilding(building: Building): Observable<Room[]> {\n    return of(this.rooms.filter( e => e.buildingId == building.buildingId));\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { MaterialModule } from '../shared/material/material.module';\nimport { LocationPageComponent } from './location-page/location-page.component';\nimport { InspectLocationComponent } from './inspect-location/inspect-location.component';\nimport { InspectBuildingComponent } from './inspect-building/inspect-building.component';\nimport { InspectRoomComponent } from './inspect-room/inspect-room.component';\nimport { CreateLocationComponent } from './create-location/create-location.component';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { AddLocationComponent } from './add-location/add-location.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComfirmComponent } from '../services/app-confirm/app-confirm.component';\nimport { AddBuildingComponent } from './add-building/add-building.component';\nimport { AddRoomComponent } from './add-room/add-room.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { SigninPageComponent } from './signin-page/signin-page.component';\nimport { SignupPageComponent } from './signup-page/signup-page.component';\n\nconst components = [\n  HeaderComponent,\n  FooterComponent,\n  LocationPageComponent,\n  InspectLocationComponent,\n  InspectBuildingComponent,\n  InspectRoomComponent,\n  CreateLocationComponent,\n  AddLocationComponent,\n  AppComfirmComponent,\n  AddBuildingComponent,\n  AddRoomComponent,\n  LandingPageComponent,\n  SigninPageComponent,\n  SignupPageComponent,\n];\n\n@NgModule({\n  declarations: [components],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    RouterModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule  \n  ],\n  exports: [\n    components\n  ]\n})\nexport class ComponentsModule { }\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatCardModule,\n    MatDividerModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatTableModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatSortModule,\n    MatStepperModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatCardModule,\n    MatDividerModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatTableModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatSortModule,\n    MatStepperModule,\n    MatProgressSpinnerModule\n  ],\n})\nexport class MaterialModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-location-page',\n  templateUrl: './location-page.component.html',\n  styleUrls: ['./location-page.component.sass']\n})\nexport class LocationPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"d-flex\">\n    <!-- <li class=\"mx-2\"><a [routerLink] = \"['inspect-location']\"> inspect location </a></li>\n    <li class=\"mx-2\"><a [routerLink] = \"['inspect-building']\"> inspect building </a></li>\n    <li class=\"mx-2\"><a [routerLink] = \"['inspect-room']\"> inspect room </a></li> -->\n    <a mat-button [routerLink]=\"['create-location']\"> create location </a>\n</div>\n<router-outlet></router-outlet>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AddBuildingComponent, BuildingDialogData } from '../add-building/add-building.component';\n\nexport interface RoomDialogData {\n  roomId?: number;\n  name?: string;\n  type?: number;\n  capacity?: number;\n  buildingId?: number;\n  title?: String;\n}\n\n@Component({\n  selector: 'app-add-room',\n  templateUrl: './add-room.component.html',\n  styleUrls: ['./add-room.component.sass']\n})\nexport class AddRoomComponent implements OnInit {\n\n  \n  addRoomForm!: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddBuildingComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: RoomDialogData,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    const name = new FormControl(this.data.name, Validators.required);\n    const type = new FormControl(this.data.type, Validators.required);\n    const capacity = new FormControl(this.data.capacity, Validators.required);\n\n    this.addRoomForm = this.fb.group({\n      name, type, capacity\n    });\n  }\n\n  closeDialog(): void {\n    this.dialogRef.close();\n  }\n\n  submitForm() {\n    if (this.readFormData()) {\n      delete this.data.title;\n      this.dialogRef.close(this.data);\n    } else {\n      console.log('Invalid form data');\n    }\n  }\n\n  readFormData(): boolean {\n    const valid = this.addRoomForm.valid;\n    const name = this.addRoomForm.value.name;\n    const type = this.addRoomForm.value.type;\n    const capacity = this.addRoomForm.value.capacity;\n    this.data = { ...this.data, roomId: 0, name, type, capacity };\n    console.log(\"data\", this.data, name, type, capacity);\n    return valid;\n  }\n\n\n}\n","<h2>{{ data.title }}</h2>\n<form [formGroup]=\"addRoomForm\" (ngSubmit)=\"submitForm()\" class=\"d-flex flex-column gap-2\">\n    <mat-form-field>\n        <mat-label>Room name</mat-label>\n        <input matInput type=\"text\" name=\"name\" formControlName=\"name\"/>\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Type</mat-label>\n        <input matInput type=\"number\" name=\"type\" formControlName=\"type\"/>\n    </mat-form-field>\n    \n    <mat-form-field>\n        <mat-label>Capacity</mat-label>\n        <input matInput type=\"number\" name=\"capacity\" formControlName=\"capacity\"/>\n    </mat-form-field>\n\n    <div class=\"d-flex gap-2 align-items-center\">\n        <button mat-raised-button color=\"primary\" cdkFocusInitial type=\"submit\">Ok</button>\n        <button mat-flat-button color=\"accent\" class=\"mx-3\" (click)=\"closeDialog()\" type=\"button\">Cancel</button>\n    </div>\n</form>\n","import { Observable } from 'rxjs';\nimport { MatDialogRef, MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Injectable } from '@angular/core';\n\nimport { AppComfirmComponent } from './app-confirm.component';\n\ninterface confirmData {\n  title?: string,\n  message?: string\n}\n\n@Injectable()\nexport class AppConfirmService {\n\n  constructor(private dialog: MatDialog) { }\n\n  public confirm(data: confirmData = {}): Observable<boolean> {\n    data.title = data.title || 'Confirm';\n    data.message = data.message || 'Are you sure?';\n    let dialogRef: MatDialogRef<AppComfirmComponent>;\n    dialogRef = this.dialog.open(AppComfirmComponent, {\n      width: '380px',\n      disableClose: true,\n      data: {title: data.title, message: data.message}\n    });\n    return dialogRef.afterClosed();\n  }\n}\n","import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: 'app-confirm.component.html',\n})\nexport class AppComfirmComponent {\n  constructor(\n    public dialogRef: MatDialogRef<AppComfirmComponent>,\n    @Inject(MAT_DIALOG_DATA) public data:any\n  ) {}\n}","<h1 matDialogTitle class=\"mb-05\">{{ data.title }}</h1>\n<div mat-dialog-content class=\"mb-1\">{{ data.message }}</div>\n<div mat-dialog-actions class=\"d-flex flex-wrap justify-content-around\">\n    <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"dialogRef.close(true)\">OK</button>\n    <button type=\"button\" color=\"accent\" mat-raised-button (click)=\"dialogRef.close(false)\">Cancel</button>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateLocationComponent } from './components/create-location/create-location.component';\n// import { InspectBuildingComponent } from './components/inspect-building/inspect-building.component';\n// import { InspectLocationComponent } from './components/inspect-location/inspect-location.component';\n// import { InspectRoomComponent } from './components/inspect-room/inspect-room.component';\n// import { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport { GoogleMapRevComponent } from './components/landing-page/google-map-rev.component';\nimport { LocationPageComponent } from './components/location-page/location-page.component';\nimport { SigninPageComponent } from './components/signin-page/signin-page.component';\n\nconst routes: Routes = [\n  { path: '', component: GoogleMapRevComponent },\n  { path: 'signin', component: SigninPageComponent },\n  {\n    path: 'location',\n    component: LocationPageComponent,\n    children: [\n      { path: '', redirectTo: 'create-location', pathMatch: 'full' },\n      // { path: 'inspect-location', component: InspectLocationComponent },\n      // { path: 'inspect-building', component: InspectBuildingComponent },\n      // { path: 'inspect-room', component: InspectRoomComponent },\n      { path: 'create-location', component: CreateLocationComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.sass']\n})\nexport class LandingPageComponent {\n  constructor() { }\n}\n","<div id=\"landingPage\" fxLayout='column' fxLayoutAlign=\"center center\">\n  <section>\n    <div class=\"title pb-2\">\n      <h3>Welcome to AssignForce</h3>\n      <aside>Space Management Platform</aside> \n    </div>\n  </section>\n  <section>\n    <div class=\"title\">\n      <h3>About</h3>\n      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Cumque, possimus! Voluptatem, sint cumque maiores quis\n        tenetur nam minima sapiente aliquid. Aspernatur porro nesciunt eius minus, rerum, officiis sunt labore neque hic\n        reiciendis itaque sint aut? Magnam facere rem consequuntur necessitatibus amet mollitia dicta recusandae illo\n        minima nostrum deleniti exercitationem dolores sunt voluptatum itaque adipisci, quibusdam qui, magni sint!\n        Commodi, molestiae corrupti eum harum ad mollitia cum sit quos facere officia qui perferendis labore doloribus,\n        modi dolor sapiente. Officiis consequuntur perferendis sint dolor debitis a amet laborum! Placeat ut facere a\n        dolorem! Fugit nemo facilis maxime odio quis odit quas fugiat?</p>\n    </div>\n  </section>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}